env in the project directory

startapp for new application

templates not in each app but in general projects directory:
because of that edit TEMPLATES in the settings and give the base to the DIRS[] as the BASE_DIR / 'templates'

render templates

template inheritence

django template engine
{{}} - dynamic data integration

TAGS
{% csrf_token %}
...

url name usage
 {% url 'room' room.id %} - room.id is for room/<str:pk>

SQL lite db usage
migration
python manage.py migrate 

python manage.py makemigrations - save the model, class that has written
python manage.py migrate - create the table, apply last migration to the db

### in order to see new tables in the admin panel
admin.py should be updated in order to validate classes

"
from .models import Room

admin.site.register(Room)
"

add MODELS to the views file too

in order to work with DB in views
                        attr.method()
queryset = ModelName.objects.all()
.get()
.filter()
.exclude()


#### create admin level user to admin panel
python manage.py createsuperuser

working on admin level means doing crud operation in admine panel


usage of built in Classes of django
from django.contrib.auth.models import User
use User class




### USER AUTHENTICATION
# User Login
Django has session based user authentication 
when we log in data goes to the backend and saved in the SESSIONS table (installed apps - session)

in browser
inspect > application > Cookies

We built session authentication by ourselves



STATIC FILES
need to add it to the settings so Django will know about it and we will be able to use it for the design\



DJANGO REST FRAMEWORK

easy wayto have json output from app

we can do it with new django-admin startapp OR new folder in same app and

and add this urls.py also to the general urls.py (studybud urls file)

It has own 
- __init__.py
- URLs.py 
- views.py
- serializers.py 


to Download rest FRAMEWORK

in terminal: (env)
"python3 -m pip install djangorestframework"

then add it to the INSTALLED_APPS

need to serialize python object (directly comes from database)
that is why when we do a = Model.objects.all() - We can not give it as Response(a)
it need to be serialized - and It works class base


When we try to acces API of Django Rest:
<!-- this will not work because django will block it  -->
<!-- django cors headers helps in this stage -->
we need to download it to work with it



### CORS Headers ###
"python3 -m pip install django-cors-headers"
https://github.com/adamchainz/django-cors-headers


and then add it INSTALLED_APPS
[
...
'corsheaders',
]

and add it to the MIDDLEWARE

MIDDLEWARE = [
    ...,
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    ...,
]


*NEED TO add one of these as the different string(object) at the end of the settings.py
three types of access for APIs
CORS_ALLOWED_ORIGINS (specific domains)
CORS_ALLOWED_ORIGIN_REGEXES (domains starts with smth, has smth in it) = r"^/api/.*$"
CORS_ALLOW_ALL_ORIGINS (False or True - open to everyone)




###### 
TRY CUSTOM USER Model

For this need to delete all data from database 
and will do commits also to the another branch

branch_name = custommodel


TERMINAL

git checkout -b custommodel

git add .

git commit -m "Your commit message here"
git remote -v
git remote add origin <repository_url>
git push origin custommodel


### AFTER this

deleted db

wrote new AbstractUser model as User

added it the settings
AUTH_USER_MODEL = 'base.User' 

migrate after this!

register user model to the admin

admin.site.register(User)

createsuperuser 

edit model in models.py
migrate again

after editing name and bio for user 
create new room and add some messages

comment out avatar =  field in the User model
it requires pillow package to work with pictures

python -m pip install pillow